1	新建一个仓库，并且该仓库应该是git类型
	1.1	git init新建git类型的仓库

2	新建文件并放入git仓库
	2.1	touch a.txt   touch a.txt或者vi
	2.2	git add 将新建的a.txt纳入git管理
	2.3	git status,查看文件在git仓库中的状态
	2.4	git commit -m "提交修改的信息说明",完成了首次提交
	2.5	新增文件内容，再次尝试提交。


       git checkout -- zxc.txt  放弃zxc.txt 文件的修改

3	git的日志和跟踪管理
	3.1	git log,查看每次操作的日志情况。
		git log --pretty=oneline可以一行显示，查看关键信息
	3.2	git diff,查看内容不同。

4	git版本的回退
	4.1	退一步，git reset --hard HEAD^，指针回退一步；
	4.2	退多步V1，git reset --hard HEAD^^^^^^^^^^,多个箭号
	4.3	退多步V2，git reset --hard HEAD~数字步数
	4.4	穿梭穿越，git reflog获得头7位版本号，然后
			git reset --hard 7位版本号

5	git三区

6	git分支
	6.1	git branch 查看分支
	6.2	git branch 分支名字  作用是新建分支
	6.3	git checkout 分支名  作用是切换分支
	6.4	git merge 目的分支   作用是将目的分之的内容合并进当前分支
	6.5	git branch -d 分支名	作用是删除分支
	6.6	git checkout -b 分支名	作用是新建+切换一步搞定

7	第一种冲突
	分支合并后的冲突，如何解决见VCR。
	
	第二种冲突
	git本地命令和github的交互冲突，
	push提交后的内容冲突，请先pull到本地人工干预收工合并后再push

	第三种冲突TortoiseGit和TortoiseSVN是同样的操作解决
	TortoiseGit--黄色三角感叹号---edit conflict---merge---resolve--commit--->OK

	第四种冲突，Egit处理
	有冲突了先pull，具体见Vcr


8	TortoiseGit
		

9	EGit

[branch "master"]
    remote = origin
    merge = refs/heads/master

[remote "origin"]
    url = git@github.com:zzyybs/换成你自己的工程.git
    fetch = +refs/heads/*:refs/remotes/origin/*
    push = refs/heads/master:refs/heads/master

	

创建SSH Key： ssh-keygen -t rsa -C zzyybs@126.com
成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。
测试连通性： ssh -T git@github.com

gitlab 公司内部搭建的 github

